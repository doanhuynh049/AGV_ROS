ARM GAS  /tmp/cciWKPLm.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"syscalls.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.initialise_monitor_handles,"ax",%progbits
  20              		.align	1
  21              		.global	initialise_monitor_handles
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	initialise_monitor_handles:
  27              	.LFB25:
  28              		.file 1 "Core/Src/syscalls.c"
   1:Core/Src/syscalls.c **** /**
   2:Core/Src/syscalls.c **** *****************************************************************************
   3:Core/Src/syscalls.c **** **
   4:Core/Src/syscalls.c **** **  File        : syscalls.c
   5:Core/Src/syscalls.c **** **
   6:Core/Src/syscalls.c **** **  Author		: Auto-generated by System workbench for STM32
   7:Core/Src/syscalls.c **** **
   8:Core/Src/syscalls.c **** **  Abstract    : System Workbench Minimal System calls file
   9:Core/Src/syscalls.c **** **
  10:Core/Src/syscalls.c **** ** 		          For more information about which c-functions
  11:Core/Src/syscalls.c **** **                need which of these lowlevel functions
  12:Core/Src/syscalls.c **** **                please consult the Newlib libc-manual
  13:Core/Src/syscalls.c **** **
  14:Core/Src/syscalls.c **** **  Target      : STMicroelectronics STM32
  15:Core/Src/syscalls.c **** **
  16:Core/Src/syscalls.c **** **  Distribution: The file is distributed “as is,” without any warranty
  17:Core/Src/syscalls.c **** **                of any kind.
  18:Core/Src/syscalls.c **** **
  19:Core/Src/syscalls.c **** *****************************************************************************
  20:Core/Src/syscalls.c **** ** @attention
  21:Core/Src/syscalls.c **** **
  22:Core/Src/syscalls.c **** ** <h2><center>&copy; COPYRIGHT(c) 2019 STMicroelectronics</center></h2>
  23:Core/Src/syscalls.c **** **
  24:Core/Src/syscalls.c **** ** Redistribution and use in source and binary forms, with or without modification,
  25:Core/Src/syscalls.c **** ** are permitted provided that the following conditions are met:
  26:Core/Src/syscalls.c **** **   1. Redistributions of source code must retain the above copyright notice,
  27:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer.
  28:Core/Src/syscalls.c **** **   2. Redistributions in binary form must reproduce the above copyright notice,
  29:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer in the documentation
  30:Core/Src/syscalls.c **** **      and/or other materials provided with the distribution.
ARM GAS  /tmp/cciWKPLm.s 			page 2


  31:Core/Src/syscalls.c **** **   3. Neither the name of STMicroelectronics nor the names of its contributors
  32:Core/Src/syscalls.c **** **      may be used to endorse or promote products derived from this software
  33:Core/Src/syscalls.c **** **      without specific prior written permission.
  34:Core/Src/syscalls.c **** **
  35:Core/Src/syscalls.c **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  36:Core/Src/syscalls.c **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  37:Core/Src/syscalls.c **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:Core/Src/syscalls.c **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  39:Core/Src/syscalls.c **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  40:Core/Src/syscalls.c **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  41:Core/Src/syscalls.c **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  42:Core/Src/syscalls.c **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  43:Core/Src/syscalls.c **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  44:Core/Src/syscalls.c **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Core/Src/syscalls.c **** **
  46:Core/Src/syscalls.c **** *****************************************************************************
  47:Core/Src/syscalls.c **** */
  48:Core/Src/syscalls.c **** 
  49:Core/Src/syscalls.c **** /* Includes */
  50:Core/Src/syscalls.c **** #include <sys/stat.h>
  51:Core/Src/syscalls.c **** #include <stdlib.h>
  52:Core/Src/syscalls.c **** #include <errno.h>
  53:Core/Src/syscalls.c **** #include <stdio.h>
  54:Core/Src/syscalls.c **** #include <signal.h>
  55:Core/Src/syscalls.c **** #include <time.h>
  56:Core/Src/syscalls.c **** #include <sys/time.h>
  57:Core/Src/syscalls.c **** #include <sys/times.h>
  58:Core/Src/syscalls.c **** 
  59:Core/Src/syscalls.c **** 
  60:Core/Src/syscalls.c **** /* Variables */
  61:Core/Src/syscalls.c **** //#undef errno
  62:Core/Src/syscalls.c **** extern int errno;
  63:Core/Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  64:Core/Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  65:Core/Src/syscalls.c **** 
  66:Core/Src/syscalls.c **** register char * stack_ptr asm("sp");
  67:Core/Src/syscalls.c **** 
  68:Core/Src/syscalls.c **** char *__env[1] = { 0 };
  69:Core/Src/syscalls.c **** char **environ = __env;
  70:Core/Src/syscalls.c **** 
  71:Core/Src/syscalls.c **** extern char _estack;  // see ld file
  72:Core/Src/syscalls.c **** extern char _Min_Stack_Size;  // see ld file
  73:Core/Src/syscalls.c **** 
  74:Core/Src/syscalls.c **** /* Functions */
  75:Core/Src/syscalls.c **** void initialise_monitor_handles()
  76:Core/Src/syscalls.c **** {
  29              		.loc 1 76 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  77:Core/Src/syscalls.c **** }
  34              		.loc 1 77 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE25:
  39              		.section	.text._getpid,"ax",%progbits
ARM GAS  /tmp/cciWKPLm.s 			page 3


  40              		.align	1
  41              		.global	_getpid
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	_getpid:
  47              	.LFB26:
  78:Core/Src/syscalls.c **** 
  79:Core/Src/syscalls.c **** int _getpid(void)
  80:Core/Src/syscalls.c **** {
  48              		.loc 1 80 1 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  81:Core/Src/syscalls.c **** 	return 1;
  53              		.loc 1 81 2 view .LVU3
  82:Core/Src/syscalls.c **** }
  54              		.loc 1 82 1 is_stmt 0 view .LVU4
  55 0000 0120     		movs	r0, #1
  56 0002 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE26:
  60              		.section	.text._kill,"ax",%progbits
  61              		.align	1
  62              		.global	_kill
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	_kill:
  68              	.LVL0:
  69              	.LFB27:
  83:Core/Src/syscalls.c **** 
  84:Core/Src/syscalls.c **** int _kill(int pid, int sig)
  85:Core/Src/syscalls.c **** {
  70              		.loc 1 85 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		.loc 1 85 1 is_stmt 0 view .LVU6
  75 0000 08B5     		push	{r3, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 3, -8
  79              		.cfi_offset 14, -4
  86:Core/Src/syscalls.c **** 	errno = EINVAL;
  80              		.loc 1 86 2 is_stmt 1 view .LVU7
  81 0002 FFF7FEFF 		bl	__errno
  82              	.LVL1:
  83              		.loc 1 86 8 is_stmt 0 view .LVU8
  84 0006 1623     		movs	r3, #22
  85 0008 0360     		str	r3, [r0]
  87:Core/Src/syscalls.c **** 	return -1;
  86              		.loc 1 87 2 is_stmt 1 view .LVU9
  88:Core/Src/syscalls.c **** }
  87              		.loc 1 88 1 is_stmt 0 view .LVU10
  88 000a 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/cciWKPLm.s 			page 4


  89 000e 08BD     		pop	{r3, pc}
  90              		.cfi_endproc
  91              	.LFE27:
  93              		.section	.text._exit,"ax",%progbits
  94              		.align	1
  95              		.global	_exit
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	_exit:
 101              	.LVL2:
 102              	.LFB28:
  89:Core/Src/syscalls.c **** 
  90:Core/Src/syscalls.c **** void _exit (int status)
  91:Core/Src/syscalls.c **** {
 103              		.loc 1 91 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ Volatile: function does not return.
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		.loc 1 91 1 is_stmt 0 view .LVU12
 109 0000 08B5     		push	{r3, lr}
 110              	.LCFI1:
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 3, -8
 113              		.cfi_offset 14, -4
  92:Core/Src/syscalls.c **** 	_kill(status, -1);
 114              		.loc 1 92 2 is_stmt 1 view .LVU13
 115 0002 4FF0FF31 		mov	r1, #-1
 116 0006 FFF7FEFF 		bl	_kill
 117              	.LVL3:
 118              	.L6:
  93:Core/Src/syscalls.c **** 	while (1) {}		/* Make sure we hang here */
 119              		.loc 1 93 2 discriminator 1 view .LVU14
 120              		.loc 1 93 13 discriminator 1 view .LVU15
 121              		.loc 1 93 8 discriminator 1 view .LVU16
 122 000a FEE7     		b	.L6
 123              		.cfi_endproc
 124              	.LFE28:
 126              		.section	.text._read,"ax",%progbits
 127              		.align	1
 128              		.weak	_read
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 133              	_read:
 134              	.LVL4:
 135              	.LFB29:
  94:Core/Src/syscalls.c **** }
  95:Core/Src/syscalls.c **** 
  96:Core/Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  97:Core/Src/syscalls.c **** {
 136              		.loc 1 97 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		.loc 1 97 1 is_stmt 0 view .LVU18
ARM GAS  /tmp/cciWKPLm.s 			page 5


 141 0000 70B5     		push	{r4, r5, r6, lr}
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 16
 144              		.cfi_offset 4, -16
 145              		.cfi_offset 5, -12
 146              		.cfi_offset 6, -8
 147              		.cfi_offset 14, -4
 148 0002 0C46     		mov	r4, r1
 149 0004 1646     		mov	r6, r2
  98:Core/Src/syscalls.c **** 	int DataIdx;
 150              		.loc 1 98 2 is_stmt 1 view .LVU19
  99:Core/Src/syscalls.c **** 
 100:Core/Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 151              		.loc 1 100 2 view .LVU20
 152              	.LVL5:
 153              		.loc 1 100 15 is_stmt 0 view .LVU21
 154 0006 0025     		movs	r5, #0
 155              		.loc 1 100 2 view .LVU22
 156 0008 06E0     		b	.L9
 157              	.LVL6:
 158              	.L10:
 101:Core/Src/syscalls.c **** 	{
 102:Core/Src/syscalls.c **** 		*ptr++ = __io_getchar();
 159              		.loc 1 102 3 is_stmt 1 discriminator 3 view .LVU23
 160              		.loc 1 102 12 is_stmt 0 discriminator 3 view .LVU24
 161 000a FFF7FEFF 		bl	__io_getchar
 162              	.LVL7:
 163              		.loc 1 102 7 discriminator 3 view .LVU25
 164 000e 2146     		mov	r1, r4
 165              	.LVL8:
 166              		.loc 1 102 10 discriminator 3 view .LVU26
 167 0010 01F8010B 		strb	r0, [r1], #1
 168              	.LVL9:
 100:Core/Src/syscalls.c **** 	{
 169              		.loc 1 100 35 is_stmt 1 discriminator 3 view .LVU27
 100:Core/Src/syscalls.c **** 	{
 170              		.loc 1 100 42 is_stmt 0 discriminator 3 view .LVU28
 171 0014 0135     		adds	r5, r5, #1
 172              	.LVL10:
 173              		.loc 1 102 7 discriminator 3 view .LVU29
 174 0016 0C46     		mov	r4, r1
 175              	.LVL11:
 176              	.L9:
 100:Core/Src/syscalls.c **** 	{
 177              		.loc 1 100 20 is_stmt 1 discriminator 1 view .LVU30
 100:Core/Src/syscalls.c **** 	{
 178              		.loc 1 100 2 is_stmt 0 discriminator 1 view .LVU31
 179 0018 B542     		cmp	r5, r6
 180 001a F6DB     		blt	.L10
 103:Core/Src/syscalls.c **** 	}
 104:Core/Src/syscalls.c **** 
 105:Core/Src/syscalls.c **** return len;
 181              		.loc 1 105 1 is_stmt 1 view .LVU32
 106:Core/Src/syscalls.c **** }
 182              		.loc 1 106 1 is_stmt 0 view .LVU33
 183 001c 3046     		mov	r0, r6
 184 001e 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cciWKPLm.s 			page 6


 185              		.loc 1 106 1 view .LVU34
 186              		.cfi_endproc
 187              	.LFE29:
 189              		.section	.text._write,"ax",%progbits
 190              		.align	1
 191              		.weak	_write
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	_write:
 197              	.LVL12:
 198              	.LFB30:
 107:Core/Src/syscalls.c **** 
 108:Core/Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
 109:Core/Src/syscalls.c **** {
 199              		.loc 1 109 1 is_stmt 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		.loc 1 109 1 is_stmt 0 view .LVU36
 204 0000 70B5     		push	{r4, r5, r6, lr}
 205              	.LCFI3:
 206              		.cfi_def_cfa_offset 16
 207              		.cfi_offset 4, -16
 208              		.cfi_offset 5, -12
 209              		.cfi_offset 6, -8
 210              		.cfi_offset 14, -4
 211 0002 0C46     		mov	r4, r1
 212 0004 1646     		mov	r6, r2
 110:Core/Src/syscalls.c **** 	int DataIdx;
 213              		.loc 1 110 2 is_stmt 1 view .LVU37
 111:Core/Src/syscalls.c **** 
 112:Core/Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 214              		.loc 1 112 2 view .LVU38
 215              	.LVL13:
 216              		.loc 1 112 15 is_stmt 0 view .LVU39
 217 0006 0025     		movs	r5, #0
 218              		.loc 1 112 2 view .LVU40
 219 0008 04E0     		b	.L13
 220              	.LVL14:
 221              	.L14:
 113:Core/Src/syscalls.c **** 	{
 114:Core/Src/syscalls.c **** 		__io_putchar(*ptr++);
 222              		.loc 1 114 3 is_stmt 1 discriminator 3 view .LVU41
 223              		.loc 1 114 3 is_stmt 0 discriminator 3 view .LVU42
 224 000a 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 225              	.LVL15:
 226              		.loc 1 114 3 discriminator 3 view .LVU43
 227 000e FFF7FEFF 		bl	__io_putchar
 228              	.LVL16:
 112:Core/Src/syscalls.c **** 	{
 229              		.loc 1 112 35 is_stmt 1 discriminator 3 view .LVU44
 112:Core/Src/syscalls.c **** 	{
 230              		.loc 1 112 42 is_stmt 0 discriminator 3 view .LVU45
 231 0012 0135     		adds	r5, r5, #1
 232              	.LVL17:
 233              	.L13:
ARM GAS  /tmp/cciWKPLm.s 			page 7


 112:Core/Src/syscalls.c **** 	{
 234              		.loc 1 112 20 is_stmt 1 discriminator 1 view .LVU46
 112:Core/Src/syscalls.c **** 	{
 235              		.loc 1 112 2 is_stmt 0 discriminator 1 view .LVU47
 236 0014 B542     		cmp	r5, r6
 237 0016 F8DB     		blt	.L14
 115:Core/Src/syscalls.c **** 	}
 116:Core/Src/syscalls.c **** 	return len;
 238              		.loc 1 116 2 is_stmt 1 view .LVU48
 117:Core/Src/syscalls.c **** }
 239              		.loc 1 117 1 is_stmt 0 view .LVU49
 240 0018 3046     		mov	r0, r6
 241 001a 70BD     		pop	{r4, r5, r6, pc}
 242              		.loc 1 117 1 view .LVU50
 243              		.cfi_endproc
 244              	.LFE30:
 246              		.section	.text._sbrk,"ax",%progbits
 247              		.align	1
 248              		.global	_sbrk
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	_sbrk:
 254              	.LVL18:
 255              	.LFB31:
 118:Core/Src/syscalls.c **** 
 119:Core/Src/syscalls.c **** caddr_t _sbrk(int incr) {
 256              		.loc 1 119 25 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		.loc 1 119 25 is_stmt 0 view .LVU52
 261 0000 08B5     		push	{r3, lr}
 262              	.LCFI4:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 3, -8
 265              		.cfi_offset 14, -4
 266 0002 0346     		mov	r3, r0
 120:Core/Src/syscalls.c ****     extern char __heap_start__ asm("end");  // Defined by the linker.
 267              		.loc 1 120 5 is_stmt 1 view .LVU53
 121:Core/Src/syscalls.c ****     static char *heap_end;
 268              		.loc 1 121 5 view .LVU54
 122:Core/Src/syscalls.c ****     char *prev_heap_end;
 269              		.loc 1 122 5 view .LVU55
 123:Core/Src/syscalls.c **** 
 124:Core/Src/syscalls.c ****     if (heap_end == NULL) heap_end = &__heap_start__;
 270              		.loc 1 124 5 view .LVU56
 271              		.loc 1 124 18 is_stmt 0 view .LVU57
 272 0004 0D4A     		ldr	r2, .L23
 273 0006 1268     		ldr	r2, [r2]
 274              		.loc 1 124 8 view .LVU58
 275 0008 5AB1     		cbz	r2, .L21
 276              	.L17:
 125:Core/Src/syscalls.c **** 
 126:Core/Src/syscalls.c ****     prev_heap_end = heap_end;
 277              		.loc 1 126 5 is_stmt 1 view .LVU59
 278              		.loc 1 126 19 is_stmt 0 view .LVU60
ARM GAS  /tmp/cciWKPLm.s 			page 8


 279 000a 0C4A     		ldr	r2, .L23
 280 000c 1068     		ldr	r0, [r2]
 281              	.LVL19:
 127:Core/Src/syscalls.c **** 
 128:Core/Src/syscalls.c ****     if (heap_end + incr > &_estack - _Min_Stack_Size) {
 282              		.loc 1 128 5 is_stmt 1 view .LVU61
 283              		.loc 1 128 18 is_stmt 0 view .LVU62
 284 000e 0344     		add	r3, r3, r0
 285              	.LVL20:
 286              		.loc 1 128 36 view .LVU63
 287 0010 0B4A     		ldr	r2, .L23+4
 288 0012 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 289 0014 0B4A     		ldr	r2, .L23+8
 290 0016 521A     		subs	r2, r2, r1
 291              		.loc 1 128 8 view .LVU64
 292 0018 9342     		cmp	r3, r2
 293 001a 06D8     		bhi	.L22
 129:Core/Src/syscalls.c ****     		__asm("BKPT #0\n");
 130:Core/Src/syscalls.c ****         errno = ENOMEM;
 131:Core/Src/syscalls.c ****         return (caddr_t)-1;
 132:Core/Src/syscalls.c **** 
 133:Core/Src/syscalls.c ****     }
 134:Core/Src/syscalls.c **** 
 135:Core/Src/syscalls.c ****     heap_end += incr;
 294              		.loc 1 135 5 is_stmt 1 view .LVU65
 295              		.loc 1 135 14 is_stmt 0 view .LVU66
 296 001c 074A     		ldr	r2, .L23
 297 001e 1360     		str	r3, [r2]
 136:Core/Src/syscalls.c ****     return (caddr_t)prev_heap_end;
 298              		.loc 1 136 5 is_stmt 1 view .LVU67
 299              	.LVL21:
 300              	.L16:
 137:Core/Src/syscalls.c **** 
 138:Core/Src/syscalls.c **** }
 301              		.loc 1 138 1 is_stmt 0 view .LVU68
 302 0020 08BD     		pop	{r3, pc}
 303              	.LVL22:
 304              	.L21:
 124:Core/Src/syscalls.c **** 
 305              		.loc 1 124 27 is_stmt 1 discriminator 1 view .LVU69
 124:Core/Src/syscalls.c **** 
 306              		.loc 1 124 36 is_stmt 0 discriminator 1 view .LVU70
 307 0022 064A     		ldr	r2, .L23
 308 0024 0849     		ldr	r1, .L23+12
 309 0026 1160     		str	r1, [r2]
 310 0028 EFE7     		b	.L17
 311              	.LVL23:
 312              	.L22:
 129:Core/Src/syscalls.c ****         errno = ENOMEM;
 313              		.loc 1 129 7 is_stmt 1 view .LVU71
 314              		.syntax unified
 315              	@ 129 "Core/Src/syscalls.c" 1
 316 002a 00BE     		BKPT #0
 317              	
 318              	@ 0 "" 2
 130:Core/Src/syscalls.c ****         return (caddr_t)-1;
 319              		.loc 1 130 9 view .LVU72
ARM GAS  /tmp/cciWKPLm.s 			page 9


 320              		.thumb
 321              		.syntax unified
 322 002c FFF7FEFF 		bl	__errno
 323              	.LVL24:
 130:Core/Src/syscalls.c ****         return (caddr_t)-1;
 324              		.loc 1 130 15 is_stmt 0 view .LVU73
 325 0030 0C23     		movs	r3, #12
 326 0032 0360     		str	r3, [r0]
 131:Core/Src/syscalls.c **** 
 327              		.loc 1 131 9 is_stmt 1 view .LVU74
 131:Core/Src/syscalls.c **** 
 328              		.loc 1 131 16 is_stmt 0 view .LVU75
 329 0034 4FF0FF30 		mov	r0, #-1
 330 0038 F2E7     		b	.L16
 331              	.L24:
 332 003a 00BF     		.align	2
 333              	.L23:
 334 003c 00000000 		.word	.LANCHOR0
 335 0040 00000000 		.word	_Min_Stack_Size
 336 0044 00000000 		.word	_estack
 337 0048 00000000 		.word	end
 338              		.cfi_endproc
 339              	.LFE31:
 341              		.section	.text._close,"ax",%progbits
 342              		.align	1
 343              		.global	_close
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 348              	_close:
 349              	.LVL25:
 350              	.LFB32:
 139:Core/Src/syscalls.c **** 
 140:Core/Src/syscalls.c **** int _close(int file)
 141:Core/Src/syscalls.c **** {
 351              		.loc 1 141 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 142:Core/Src/syscalls.c **** 	return -1;
 356              		.loc 1 142 2 view .LVU77
 143:Core/Src/syscalls.c **** }
 357              		.loc 1 143 1 is_stmt 0 view .LVU78
 358 0000 4FF0FF30 		mov	r0, #-1
 359              	.LVL26:
 360              		.loc 1 143 1 view .LVU79
 361 0004 7047     		bx	lr
 362              		.cfi_endproc
 363              	.LFE32:
 365              		.section	.text._fstat,"ax",%progbits
 366              		.align	1
 367              		.global	_fstat
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 372              	_fstat:
ARM GAS  /tmp/cciWKPLm.s 			page 10


 373              	.LVL27:
 374              	.LFB33:
 144:Core/Src/syscalls.c **** 
 145:Core/Src/syscalls.c **** 
 146:Core/Src/syscalls.c **** int _fstat(int file, struct stat *st)
 147:Core/Src/syscalls.c **** {
 375              		.loc 1 147 1 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 148:Core/Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 380              		.loc 1 148 2 view .LVU81
 381              		.loc 1 148 14 is_stmt 0 view .LVU82
 382 0000 4FF40053 		mov	r3, #8192
 383 0004 4B60     		str	r3, [r1, #4]
 149:Core/Src/syscalls.c **** 	return 0;
 384              		.loc 1 149 2 is_stmt 1 view .LVU83
 150:Core/Src/syscalls.c **** }
 385              		.loc 1 150 1 is_stmt 0 view .LVU84
 386 0006 0020     		movs	r0, #0
 387              	.LVL28:
 388              		.loc 1 150 1 view .LVU85
 389 0008 7047     		bx	lr
 390              		.cfi_endproc
 391              	.LFE33:
 393              		.section	.text._isatty,"ax",%progbits
 394              		.align	1
 395              		.global	_isatty
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	_isatty:
 401              	.LVL29:
 402              	.LFB34:
 151:Core/Src/syscalls.c **** 
 152:Core/Src/syscalls.c **** int _isatty(int file)
 153:Core/Src/syscalls.c **** {
 403              		.loc 1 153 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 154:Core/Src/syscalls.c **** 	return 1;
 408              		.loc 1 154 2 view .LVU87
 155:Core/Src/syscalls.c **** }
 409              		.loc 1 155 1 is_stmt 0 view .LVU88
 410 0000 0120     		movs	r0, #1
 411              	.LVL30:
 412              		.loc 1 155 1 view .LVU89
 413 0002 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE34:
 417              		.section	.text._lseek,"ax",%progbits
 418              		.align	1
 419              		.global	_lseek
 420              		.syntax unified
ARM GAS  /tmp/cciWKPLm.s 			page 11


 421              		.thumb
 422              		.thumb_func
 424              	_lseek:
 425              	.LVL31:
 426              	.LFB35:
 156:Core/Src/syscalls.c **** 
 157:Core/Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 158:Core/Src/syscalls.c **** {
 427              		.loc 1 158 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 159:Core/Src/syscalls.c **** 	return 0;
 432              		.loc 1 159 2 view .LVU91
 160:Core/Src/syscalls.c **** }
 433              		.loc 1 160 1 is_stmt 0 view .LVU92
 434 0000 0020     		movs	r0, #0
 435              	.LVL32:
 436              		.loc 1 160 1 view .LVU93
 437 0002 7047     		bx	lr
 438              		.cfi_endproc
 439              	.LFE35:
 441              		.section	.text._open,"ax",%progbits
 442              		.align	1
 443              		.global	_open
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 448              	_open:
 449              	.LVL33:
 450              	.LFB36:
 161:Core/Src/syscalls.c **** 
 162:Core/Src/syscalls.c **** int _open(char *path, int flags, ...)
 163:Core/Src/syscalls.c **** {
 451              		.loc 1 163 1 is_stmt 1 view -0
 452              		.cfi_startproc
 453              		@ args = 4, pretend = 12, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 1
 455              		@ link register save eliminated.
 456              		.loc 1 163 1 is_stmt 0 view .LVU95
 457 0000 0EB4     		push	{r1, r2, r3}
 458              	.LCFI5:
 459              		.cfi_def_cfa_offset 12
 460              		.cfi_offset 1, -12
 461              		.cfi_offset 2, -8
 462              		.cfi_offset 3, -4
 164:Core/Src/syscalls.c **** 	/* Pretend like we always fail */
 165:Core/Src/syscalls.c **** 	return -1;
 463              		.loc 1 165 2 is_stmt 1 view .LVU96
 166:Core/Src/syscalls.c **** }
 464              		.loc 1 166 1 is_stmt 0 view .LVU97
 465 0002 4FF0FF30 		mov	r0, #-1
 466              	.LVL34:
 467              		.loc 1 166 1 view .LVU98
 468 0006 03B0     		add	sp, sp, #12
 469              	.LCFI6:
ARM GAS  /tmp/cciWKPLm.s 			page 12


 470              		.cfi_restore 3
 471              		.cfi_restore 2
 472              		.cfi_restore 1
 473              		.cfi_def_cfa_offset 0
 474 0008 7047     		bx	lr
 475              		.cfi_endproc
 476              	.LFE36:
 478              		.section	.text._wait,"ax",%progbits
 479              		.align	1
 480              		.global	_wait
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 485              	_wait:
 486              	.LVL35:
 487              	.LFB37:
 167:Core/Src/syscalls.c **** 
 168:Core/Src/syscalls.c **** int _wait(int *status)
 169:Core/Src/syscalls.c **** {
 488              		.loc 1 169 1 is_stmt 1 view -0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		.loc 1 169 1 is_stmt 0 view .LVU100
 493 0000 08B5     		push	{r3, lr}
 494              	.LCFI7:
 495              		.cfi_def_cfa_offset 8
 496              		.cfi_offset 3, -8
 497              		.cfi_offset 14, -4
 170:Core/Src/syscalls.c **** 	errno = ECHILD;
 498              		.loc 1 170 2 is_stmt 1 view .LVU101
 499 0002 FFF7FEFF 		bl	__errno
 500              	.LVL36:
 501              		.loc 1 170 8 is_stmt 0 view .LVU102
 502 0006 0A23     		movs	r3, #10
 503 0008 0360     		str	r3, [r0]
 171:Core/Src/syscalls.c **** 	return -1;
 504              		.loc 1 171 2 is_stmt 1 view .LVU103
 172:Core/Src/syscalls.c **** }
 505              		.loc 1 172 1 is_stmt 0 view .LVU104
 506 000a 4FF0FF30 		mov	r0, #-1
 507 000e 08BD     		pop	{r3, pc}
 508              		.cfi_endproc
 509              	.LFE37:
 511              		.section	.text._unlink,"ax",%progbits
 512              		.align	1
 513              		.global	_unlink
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 518              	_unlink:
 519              	.LVL37:
 520              	.LFB38:
 173:Core/Src/syscalls.c **** 
 174:Core/Src/syscalls.c **** int _unlink(char *name)
 175:Core/Src/syscalls.c **** {
 521              		.loc 1 175 1 is_stmt 1 view -0
ARM GAS  /tmp/cciWKPLm.s 			page 13


 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		.loc 1 175 1 is_stmt 0 view .LVU106
 526 0000 08B5     		push	{r3, lr}
 527              	.LCFI8:
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 3, -8
 530              		.cfi_offset 14, -4
 176:Core/Src/syscalls.c **** 	errno = ENOENT;
 531              		.loc 1 176 2 is_stmt 1 view .LVU107
 532 0002 FFF7FEFF 		bl	__errno
 533              	.LVL38:
 534              		.loc 1 176 8 is_stmt 0 view .LVU108
 535 0006 0223     		movs	r3, #2
 536 0008 0360     		str	r3, [r0]
 177:Core/Src/syscalls.c **** 	return -1;
 537              		.loc 1 177 2 is_stmt 1 view .LVU109
 178:Core/Src/syscalls.c **** }
 538              		.loc 1 178 1 is_stmt 0 view .LVU110
 539 000a 4FF0FF30 		mov	r0, #-1
 540 000e 08BD     		pop	{r3, pc}
 541              		.cfi_endproc
 542              	.LFE38:
 544              		.section	.text._times,"ax",%progbits
 545              		.align	1
 546              		.global	_times
 547              		.syntax unified
 548              		.thumb
 549              		.thumb_func
 551              	_times:
 552              	.LVL39:
 553              	.LFB39:
 179:Core/Src/syscalls.c **** 
 180:Core/Src/syscalls.c **** int _times(struct tms *buf)
 181:Core/Src/syscalls.c **** {
 554              		.loc 1 181 1 is_stmt 1 view -0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558              		@ link register save eliminated.
 182:Core/Src/syscalls.c **** 	return -1;
 559              		.loc 1 182 2 view .LVU112
 183:Core/Src/syscalls.c **** }
 560              		.loc 1 183 1 is_stmt 0 view .LVU113
 561 0000 4FF0FF30 		mov	r0, #-1
 562              	.LVL40:
 563              		.loc 1 183 1 view .LVU114
 564 0004 7047     		bx	lr
 565              		.cfi_endproc
 566              	.LFE39:
 568              		.section	.text._stat,"ax",%progbits
 569              		.align	1
 570              		.global	_stat
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
ARM GAS  /tmp/cciWKPLm.s 			page 14


 575              	_stat:
 576              	.LVL41:
 577              	.LFB40:
 184:Core/Src/syscalls.c **** 
 185:Core/Src/syscalls.c **** int _stat(char *file, struct stat *st)
 186:Core/Src/syscalls.c **** {
 578              		.loc 1 186 1 is_stmt 1 view -0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 187:Core/Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 583              		.loc 1 187 2 view .LVU116
 584              		.loc 1 187 14 is_stmt 0 view .LVU117
 585 0000 4FF40053 		mov	r3, #8192
 586 0004 4B60     		str	r3, [r1, #4]
 188:Core/Src/syscalls.c **** 	return 0;
 587              		.loc 1 188 2 is_stmt 1 view .LVU118
 189:Core/Src/syscalls.c **** }
 588              		.loc 1 189 1 is_stmt 0 view .LVU119
 589 0006 0020     		movs	r0, #0
 590              	.LVL42:
 591              		.loc 1 189 1 view .LVU120
 592 0008 7047     		bx	lr
 593              		.cfi_endproc
 594              	.LFE40:
 596              		.section	.text._link,"ax",%progbits
 597              		.align	1
 598              		.global	_link
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 603              	_link:
 604              	.LVL43:
 605              	.LFB41:
 190:Core/Src/syscalls.c **** 
 191:Core/Src/syscalls.c **** int _link(char *old, char *new)
 192:Core/Src/syscalls.c **** {
 606              		.loc 1 192 1 is_stmt 1 view -0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              		.loc 1 192 1 is_stmt 0 view .LVU122
 611 0000 08B5     		push	{r3, lr}
 612              	.LCFI9:
 613              		.cfi_def_cfa_offset 8
 614              		.cfi_offset 3, -8
 615              		.cfi_offset 14, -4
 193:Core/Src/syscalls.c **** 	errno = EMLINK;
 616              		.loc 1 193 2 is_stmt 1 view .LVU123
 617 0002 FFF7FEFF 		bl	__errno
 618              	.LVL44:
 619              		.loc 1 193 8 is_stmt 0 view .LVU124
 620 0006 1F23     		movs	r3, #31
 621 0008 0360     		str	r3, [r0]
 194:Core/Src/syscalls.c **** 	return -1;
 622              		.loc 1 194 2 is_stmt 1 view .LVU125
ARM GAS  /tmp/cciWKPLm.s 			page 15


 195:Core/Src/syscalls.c **** }
 623              		.loc 1 195 1 is_stmt 0 view .LVU126
 624 000a 4FF0FF30 		mov	r0, #-1
 625 000e 08BD     		pop	{r3, pc}
 626              		.cfi_endproc
 627              	.LFE41:
 629              		.section	.text._fork,"ax",%progbits
 630              		.align	1
 631              		.global	_fork
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 636              	_fork:
 637              	.LFB42:
 196:Core/Src/syscalls.c **** 
 197:Core/Src/syscalls.c **** int _fork(void)
 198:Core/Src/syscalls.c **** {
 638              		.loc 1 198 1 is_stmt 1 view -0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642 0000 08B5     		push	{r3, lr}
 643              	.LCFI10:
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 3, -8
 646              		.cfi_offset 14, -4
 199:Core/Src/syscalls.c **** 	errno = EAGAIN;
 647              		.loc 1 199 2 view .LVU128
 648 0002 FFF7FEFF 		bl	__errno
 649              	.LVL45:
 650              		.loc 1 199 8 is_stmt 0 view .LVU129
 651 0006 0B23     		movs	r3, #11
 652 0008 0360     		str	r3, [r0]
 200:Core/Src/syscalls.c **** 	return -1;
 653              		.loc 1 200 2 is_stmt 1 view .LVU130
 201:Core/Src/syscalls.c **** }
 654              		.loc 1 201 1 is_stmt 0 view .LVU131
 655 000a 4FF0FF30 		mov	r0, #-1
 656 000e 08BD     		pop	{r3, pc}
 657              		.cfi_endproc
 658              	.LFE42:
 660              		.section	.text._execve,"ax",%progbits
 661              		.align	1
 662              		.global	_execve
 663              		.syntax unified
 664              		.thumb
 665              		.thumb_func
 667              	_execve:
 668              	.LVL46:
 669              	.LFB43:
 202:Core/Src/syscalls.c **** 
 203:Core/Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 204:Core/Src/syscalls.c **** {
 670              		.loc 1 204 1 is_stmt 1 view -0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cciWKPLm.s 			page 16


 674              		.loc 1 204 1 is_stmt 0 view .LVU133
 675 0000 08B5     		push	{r3, lr}
 676              	.LCFI11:
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 3, -8
 679              		.cfi_offset 14, -4
 205:Core/Src/syscalls.c **** 	errno = ENOMEM;
 680              		.loc 1 205 2 is_stmt 1 view .LVU134
 681 0002 FFF7FEFF 		bl	__errno
 682              	.LVL47:
 683              		.loc 1 205 8 is_stmt 0 view .LVU135
 684 0006 0C23     		movs	r3, #12
 685 0008 0360     		str	r3, [r0]
 206:Core/Src/syscalls.c **** 	return -1;
 686              		.loc 1 206 2 is_stmt 1 view .LVU136
 207:Core/Src/syscalls.c **** }
 687              		.loc 1 207 1 is_stmt 0 view .LVU137
 688 000a 4FF0FF30 		mov	r0, #-1
 689 000e 08BD     		pop	{r3, pc}
 690              		.cfi_endproc
 691              	.LFE43:
 693              		.global	environ
 694              		.global	__env
 695              		.section	.bss.__env,"aw",%nobits
 696              		.align	2
 699              	__env:
 700 0000 00000000 		.space	4
 701              		.section	.bss.heap_end.0,"aw",%nobits
 702              		.align	2
 703              		.set	.LANCHOR0,. + 0
 706              	heap_end.0:
 707 0000 00000000 		.space	4
 708              		.section	.data.environ,"aw"
 709              		.align	2
 712              	environ:
 713 0000 00000000 		.word	__env
 714              		.weak	__io_putchar
 715              		.weak	__io_getchar
 716              		.text
 717              	.Letext0:
 718              		.file 2 "/opt/st/stm32cubeide_1.12.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 719              		.file 3 "/opt/st/stm32cubeide_1.12.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 720              		.file 4 "/opt/st/stm32cubeide_1.12.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 721              		.file 5 "/opt/st/stm32cubeide_1.12.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 722              		.file 6 "/opt/st/stm32cubeide_1.12.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 723              		.file 7 "/opt/st/stm32cubeide_1.12.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 724              		.file 8 "/opt/st/stm32cubeide_1.12.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 725              		.file 9 "/opt/st/stm32cubeide_1.12.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
ARM GAS  /tmp/cciWKPLm.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscalls.c
     /tmp/cciWKPLm.s:20     .text.initialise_monitor_handles:0000000000000000 $t
     /tmp/cciWKPLm.s:26     .text.initialise_monitor_handles:0000000000000000 initialise_monitor_handles
     /tmp/cciWKPLm.s:40     .text._getpid:0000000000000000 $t
     /tmp/cciWKPLm.s:46     .text._getpid:0000000000000000 _getpid
     /tmp/cciWKPLm.s:61     .text._kill:0000000000000000 $t
     /tmp/cciWKPLm.s:67     .text._kill:0000000000000000 _kill
     /tmp/cciWKPLm.s:94     .text._exit:0000000000000000 $t
     /tmp/cciWKPLm.s:100    .text._exit:0000000000000000 _exit
     /tmp/cciWKPLm.s:127    .text._read:0000000000000000 $t
     /tmp/cciWKPLm.s:133    .text._read:0000000000000000 _read
     /tmp/cciWKPLm.s:190    .text._write:0000000000000000 $t
     /tmp/cciWKPLm.s:196    .text._write:0000000000000000 _write
     /tmp/cciWKPLm.s:247    .text._sbrk:0000000000000000 $t
     /tmp/cciWKPLm.s:253    .text._sbrk:0000000000000000 _sbrk
     /tmp/cciWKPLm.s:334    .text._sbrk:000000000000003c $d
     /tmp/cciWKPLm.s:342    .text._close:0000000000000000 $t
     /tmp/cciWKPLm.s:348    .text._close:0000000000000000 _close
     /tmp/cciWKPLm.s:366    .text._fstat:0000000000000000 $t
     /tmp/cciWKPLm.s:372    .text._fstat:0000000000000000 _fstat
     /tmp/cciWKPLm.s:394    .text._isatty:0000000000000000 $t
     /tmp/cciWKPLm.s:400    .text._isatty:0000000000000000 _isatty
     /tmp/cciWKPLm.s:418    .text._lseek:0000000000000000 $t
     /tmp/cciWKPLm.s:424    .text._lseek:0000000000000000 _lseek
     /tmp/cciWKPLm.s:442    .text._open:0000000000000000 $t
     /tmp/cciWKPLm.s:448    .text._open:0000000000000000 _open
     /tmp/cciWKPLm.s:479    .text._wait:0000000000000000 $t
     /tmp/cciWKPLm.s:485    .text._wait:0000000000000000 _wait
     /tmp/cciWKPLm.s:512    .text._unlink:0000000000000000 $t
     /tmp/cciWKPLm.s:518    .text._unlink:0000000000000000 _unlink
     /tmp/cciWKPLm.s:545    .text._times:0000000000000000 $t
     /tmp/cciWKPLm.s:551    .text._times:0000000000000000 _times
     /tmp/cciWKPLm.s:569    .text._stat:0000000000000000 $t
     /tmp/cciWKPLm.s:575    .text._stat:0000000000000000 _stat
     /tmp/cciWKPLm.s:597    .text._link:0000000000000000 $t
     /tmp/cciWKPLm.s:603    .text._link:0000000000000000 _link
     /tmp/cciWKPLm.s:630    .text._fork:0000000000000000 $t
     /tmp/cciWKPLm.s:636    .text._fork:0000000000000000 _fork
     /tmp/cciWKPLm.s:661    .text._execve:0000000000000000 $t
     /tmp/cciWKPLm.s:667    .text._execve:0000000000000000 _execve
     /tmp/cciWKPLm.s:712    .data.environ:0000000000000000 environ
     /tmp/cciWKPLm.s:699    .bss.__env:0000000000000000 __env
     /tmp/cciWKPLm.s:696    .bss.__env:0000000000000000 $d
     /tmp/cciWKPLm.s:702    .bss.heap_end.0:0000000000000000 $d
     /tmp/cciWKPLm.s:706    .bss.heap_end.0:0000000000000000 heap_end.0
     /tmp/cciWKPLm.s:709    .data.environ:0000000000000000 $d

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
_Min_Stack_Size
_estack
end
